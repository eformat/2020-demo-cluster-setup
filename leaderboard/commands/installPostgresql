#!/usr/bin/env bash

installPostgresql::run() {
  if [ $PG_MODE = "prod" ];
  then 
    header_text "Deploying PostgeSQL(Prod)"
    yq w  "$(configdir)/openshift-pgsql12-secret.yaml"  'stringData.database-username' $PGSQL12_USERNAME \
      | yq w - 'stringData.database-username-password' $PGSQL12_PASSWORD 
      | oc create -n"$(project)" -f -
    oc apply -n"$(project)" -f "$(configdir)/openshift-pgsql12.yaml"    
    sleep 5; while echo && oc get pods -n "$(project)" --selector=deploymentConfig=postgresql \
      | grep -v -E "(Running|Completed|STATUS)"; do sleep 5; done
    oc create configmap -n"$(project)" leaderboard-schema \
     --from-file=schema.sql="$(configdir)/schema.sql"      
    oc create -n"$(project)" -f "$(configdir)/leaderboard-schema-job.yaml"
  else
    header_text "Deploying PostgeSQL(Test)"
    oc create configmap -n"$(project)" appsql \
      --from-file=schema.sql="$(configdir)/schema.sql"
    oc apply -n"$(project)" -f "$(configdir)/openshift-pgsql12-mointoring.yaml"
    sleep 5; while echo && oc get pods -n "$(project)" --selector=deploymentconfig=postgresql \
      | grep -v -E "(Running|Completed|STATUS)"; do sleep 5; done
  fi
}

installPostgresql::usage(){
  echo "No parameters"
}

installPostgresql::clean(){
  header_text "UnDeploying PostgeSQL"
 POSTGRESQL_PARAMS="PG_NETWORK_MASK=all"
 oc process -f "$(configdir)/openshift-pgsql12-template.json"  $POSTGRESQL_PARAMS | oc delete -n"$(project)" -f -
 oc delete configmap -n"$(project)" leaderboard-schema
 oc delete -n"$(project)" -f "$(configdir)/leaderboard-schema-job.yaml"
}

installPostgresql::description(){
  echo "Installs PostgreSQL Persistent Template"
}