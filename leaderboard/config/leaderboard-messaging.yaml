apiVersion: v1
kind: Template

metadata:
  name: leaderboard-messaging

parameters:
  - name: APPLICATION_NAME
    required: true
    value: leaderboard-messaging
  - name: ROUTE_NAME
    value: leaderboard-messaging
    required: true
  - name: REPLICAS
    value: "1"
    required: true
  - name: IMAGE_REPOSITORY
    displayName: Image Repository
    value: quay.io/redhatdemo/2020-leaderboard-messaging:latest
    required: true
  - name: CONTAINER_REQUEST_CPU
    value: "250m"
  - name: CONTAINER_REQUEST_MEMORY
    value: "500Mi"
  - name: CONTAINER_LIMIT_CPU
    value: "1"
  - name: CONTAINER_LIMIT_MEMORY
    value: "1Gi"
  - name: PG_SECRET
    required: true
    displayName: PostgreSQL Secret

objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: ${APPLICATION_NAME}
        app.kubernetes.io/part-of: leaderboard-messaging
      name: ${APPLICATION_NAME}
    spec:
      replicas: ${{REPLICAS}}
      revisionHistoryLimit: 2
      selector:
        app: ${APPLICATION_NAME}
      strategy:
        rollingParams:
          timeoutSeconds: 3600
        type: Rolling
      template:
        metadata:
          labels:
            app: ${APPLICATION_NAME}
        spec:
          containers:
            - image: ${IMAGE_REPOSITORY}
              imagePullPolicy: Always
              name: messaging
              env:
                - name: QUARKUS_DATASOURCE_USERNAME
                  valueFrom:
                    secretKeyRef:
                      name: ${PG_SECRET}
                      key: database-username
                - name: QUARKUS_DATASOURCE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${PG_SECRET}
                      key: database-username-password
              ports:
                - containerPort: 8080
                  name: http
                  protocol: TCP
              # livenessProbe:
              #   httpGet:
              #     path: /health/live
              #     port: 8080
              # readinessProbe:
              #   httpGet:
              #     path: /health/ready
              #     port: 8080
              resources:
                requests:
                  cpu: ${CONTAINER_REQUEST_CPU}
                  memory: ${CONTAINER_REQUEST_MEMORY}
                limits:
                  cpu: ${CONTAINER_LIMIT_CPU}
                  memory: ${CONTAINER_LIMIT_MEMORY}
              volumeMounts:
                - mountPath: /etc/messaging
                  name: skupper-amqp-trust
          volumes:
            - name: skupper-amqp-trust
              secret:
                secretName: skupper
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            from:
              kind: ImageStreamTag
              name: 2020-leaderboard-messaging:latest
            containerNames:
              - "messaging"
